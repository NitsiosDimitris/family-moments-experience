{"version":3,"file":"static/js/428.b0bfcfbd.chunk.js","mappings":"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","sources":["helpers.js","services/APIs.js","services/OneSignalServer.js","../node_modules/@coreui/icons/js/free/cil-search.js","views/Landing.js"],"sourcesContent":["const getMobileOperatingSystem = () => {\n  var userAgent = navigator.userAgent || navigator.vendor || window.opera;\n\n  // Windows Phone must come first because its UA also contains \"Android\"\n  if (/windows phone/i.test(userAgent)) {\n    return \"Windows Phone\";\n  }\n\n  if (/android/i.test(userAgent)) {\n    return \"Android\";\n  }\n\n  // iOS detection from: http://stackoverflow.com/a/9039885/177710\n  if (/iPad|iPhone|iPod/.test(userAgent) && !window.MSStream) {\n    return \"iOS\";\n  }\n\n  return \"Desktop\";\n}\n\nlet isIOS = getMobileOperatingSystem() === 'iOS' ? true : false;\n\n\n// Date, time\nlet now = new Date();\nlet day = (\"0\" + now.getDate()).slice(-2);\nlet month = (\"0\" + (now.getMonth() + 1)).slice(-2);\nlet today = now.getFullYear() + \"-\" + (month) + \"-\" + (day);\n\nlet currentTime =\n  (now.getHours() < 10 ? '0' + (now.getHours()) : now.getHours())\n  + ':' +\n  (now.getMinutes() < 10 ? '0' + (now.getMinutes()) : now.getMinutes())\n  + ':' +\n  now.getSeconds();\n\nfunction getRandomInt(max) {\n  max = 9999999;\n  return Math.floor(Math.random() * max);\n}\n\nfunction addMinutes(numOfMinutes, date = new Date()) {\n  date.setMinutes(date.getMinutes() + numOfMinutes);\n\n  return date;\n}\n\nvar backPresses = 0;\nvar isAndroid = navigator.userAgent.toLowerCase().indexOf(\"android\") > -1;\nvar maxBackPresses = 2;\nfunction handleBackButton(init) {\n  if (init !== true)\n    backPresses++;\n  if ((!isAndroid && backPresses >= maxBackPresses) ||\n    (isAndroid && backPresses >= maxBackPresses - 1)) {\n    window.history.back();\n  } else\n    window.history.pushState({}, '');\n}\nfunction setupWindowHistoryTricks() {\n  handleBackButton(true);\n  window.addEventListener('popstate', handleBackButton);\n}\n\nexport { today, currentTime, isIOS, addMinutes, getRandomInt, setupWindowHistoryTricks }\n\n","import { api_server_url } from \"src/config/urls\";\nimport { GetApi } from \"./Axios\";\n\nexport async function findSession(code) { // Retrieve user session\n  console.log('Getting session...');\n\n  const session = await GetApi(api_server_url + '/session/user/' + code)\n    .then(value => value);\n\n  return { ...session };\n}\n\n\nexport async function findUser(code) { // Retrieve user\n  console.log('Getting user...');\n\n  const user = await GetApi(api_server_url + '/user/' + code)\n    .then(value => value);\n\n  return { ...user };\n}\n\nexport async function findRole(RoleId) { // Retrieve user\n  console.log('Getting role...');\n\n  const role = await GetApi(api_server_url + '/role/' + RoleId)\n    .then(value => value);\n\n  return { ...role };\n}\n\nexport async function findUserAnswered(session_id, code, phase, startDate, endDate, type) { // Retrieve other users\n  console.log('Getting user answers...');\n\n  const user = await GetApi(api_server_url + '/questions/user/answered/' + session_id + '/' + code + '/' + phase + '/' + startDate + '/' + endDate + '/' + type)\n    .then(value => value);\n\n  return user;\n}\n\nexport async function findOtherUsers(session_id, code) { // Retrieve other users\n  console.log('Getting other users status...');\n\n  const users = await GetApi(api_server_url + '/session/users/' + session_id + '/' + code)\n    .then(value => value);\n\n  return users;\n}\n\nexport async function findOtherUsersAnswered(session_id, code, phase, startDate, endDate) { // Retrieve other users\n  console.log('Getting other users answered...');\n\n  const users = await GetApi(api_server_url + '/questions/answered/' + session_id + '/' + code + '/' + phase + '/' + startDate + '/' + endDate)\n    .then(value => value);\n\n  return users;\n}\n\n","\nimport { settings } from \"src/config/globals\";\nimport { api_server_url, app_url } from \"src/config/urls\";\nimport { addMinutes, isIOS, today } from \"src/helpers\";\nimport { GetApi, PostApi } from \"./Axios\";\n\nexport async function SendWebPushByCode(code, headings, subtitle, campaign, datetime, topic, click_url) {\n  let body = {\n    code: code,\n    headings: headings,\n    subtitle: subtitle,\n    campaign: campaign,\n    datetime: datetime,\n    topic: topic,\n    click_url: click_url\n  }\n  await PostApi(api_server_url + '/web-push', body)\n    .then(function (value) {\n      console.log(\"Sending Web Push... => \", value);\n    });\n}\n\nexport async function SendSMSByCode(phone, message, datetime, click_url) {\n  let body = {\n    phone: phone,\n    message: message,\n    datetime: datetime || null,\n    click_url: click_url\n  }\n  await PostApi(api_server_url + '/sms-push', body)\n    .then(function (value) {\n      console.log(\"Sending SMS Push... => \", value);\n    });\n}\n\nexport async function AddTags(userId, session_id, code) {\n  const options = {\n    method: 'PUT',\n    headers: { Accept: 'application/json', 'Content-Type': 'application/json' },\n    body: JSON.stringify({\n      app_id: `${process.env.REACT_APP_ONE_SIGNAL_APP_ID}`,\n      external_user_id: code,\n      tags: {\n        session_id: session_id,\n      }\n    })\n  };\n\n  fetch('https://onesignal.com/api/v1/players/' + userId, options)\n    .then(response => response.json())\n    .then(response => console.log('Updating player id... => ', response.success))\n    .catch(err => console.error(err));\n}\n\nexport async function GetDevices() {\n  let data = '';\n  await GetApi(api_server_url + '/devices')\n    .then(function (value) {\n      data = value.body.players;\n    });\n  return data;\n}\n\nexport async function AddDevice(phone, code, session_id) {\n  const response = await PostApi(api_server_url + '/device', { phone, code, session_id })\n    .then(value => value)\n\n  return { response };\n}\n\nexport function StartCampaign(code, phone) {\n  // Start Push Server Campaign\n  const headings = 'Knock Knock!'\n  const subtitle = 'Questions are now available!';\n  const campaign = 'Default Campaign';\n  const topic = 'Default Topic';\n  const datetime = new Date();\n  const clickUrl = app_url.concat('/');\n\n  const messageContent = 'Questions are now available!';\n  const reminderContent = 'Have you completed your task? If not do it now!';\n\n  const tomorrow = new Date(today);\n  tomorrow.setDate(tomorrow.getDate() + 1);\n\n\n  const total_days = 7; // total campaign days\n  tomorrow.setDate(tomorrow.getDate());\n\n\n  //Welcome Message\n  if (isIOS) {\n    SendSMSByCode(phone, 'Welcome to Family Moments Experience!', null, app_url);\n  } else {\n    SendWebPushByCode(code, headings, \"Welcome to Family Moments Experience!\", campaign, datetime, topic, app_url);\n  }\n\n  var d = new Date();\n  var n = d.toLocaleTimeString('en-US', { hour12: false });\n\n\n\n  for (let i = 0; i < total_days; i++) {\n    const [next] = tomorrow.toISOString().split('T');\n\n    // let phaseA_meritTime = addMinutes(15, new Date(next + 'T' + settings.phaseA_time));\n    // let phaseB_meritTime = addMinutes(15, new Date(next + 'T' + settings.phaseB_time));\n    // let phaseC_meritTime = addMinutes(15, new Date(next + 'T' + settings.phaseC_time));\n\n    let phaseA_meritTime = addMinutes(10, new Date(next + 'T' + settings.phaseA_time));\n    let phaseB_meritTime = addMinutes(10, new Date(next + 'T' + settings.phaseB_time));\n    let phaseC_meritTime = addMinutes(10, new Date(next + 'T' + settings.phaseC_time));\n\n    if (isIOS) {\n      SendSMSByCode(phone, messageContent, new Date(next + 'T' + settings.phaseA_time), clickUrl); // Phase A Campaign\n      SendSMSByCode(phone, reminderContent, phaseA_meritTime, clickUrl); // Phase A Campaign Merit Time\n\n      SendSMSByCode(phone, messageContent, new Date(next + 'T' + settings.phaseB_time), clickUrl); // Phase B Campaign\n      SendSMSByCode(phone, reminderContent, phaseB_meritTime, clickUrl); // Phase B Campaign Merit Time\n\n      SendSMSByCode(phone, messageContent, new Date(next + 'T' + settings.phaseC_time), clickUrl); // Phase C Campaign\n      SendSMSByCode(phone, reminderContent, phaseC_meritTime, clickUrl); // Phase C Campaign Merit Time\n\n    } else {\n      SendWebPushByCode(code, headings, messageContent, campaign, new Date(next + 'T' + settings.phaseA_time), topic, clickUrl); // Phase A Campaign\n      SendWebPushByCode(code, headings, reminderContent, campaign, phaseA_meritTime, topic, clickUrl); // Phase A Campaign Merit Time\n\n      SendWebPushByCode(code, headings, messageContent, campaign, new Date(next + 'T' + settings.phaseB_time), topic, clickUrl); // Phase B Campaign\n      SendWebPushByCode(code, headings, reminderContent, campaign, phaseB_meritTime, topic, clickUrl); // Phase B Campaign Merit Time\n\n      SendWebPushByCode(code, headings, messageContent, campaign, new Date(next + 'T' + settings.phaseC_time), topic, clickUrl); // Phase C Campaign\n      SendWebPushByCode(code, headings, reminderContent, campaign, phaseC_meritTime, topic, clickUrl); // Phase C Campaign Merit Time\n\n    }\n\n    tomorrow.setDate(tomorrow.getDate() + 1)\n  }\n}\n\n","export const cilSearch = [\"512 512\",\"<path fill='var(--ci-primary-color, currentColor)' d='M479.6,399.716l-81.084-81.084-62.368-25.767A175.014,175.014,0,0,0,368,192c0-97.047-78.953-176-176-176S16,94.953,16,192,94.953,368,192,368a175.034,175.034,0,0,0,101.619-32.377l25.7,62.2L400.4,478.911a56,56,0,1,0,79.2-79.195ZM48,192c0-79.4,64.6-144,144-144s144,64.6,144,144S271.4,336,192,336,48,271.4,48,192ZM456.971,456.284a24.028,24.028,0,0,1-33.942,0l-76.572-76.572-23.894-57.835L380.4,345.771l76.573,76.572A24.028,24.028,0,0,1,456.971,456.284Z' class='ci-primary'/>\"]","import React, { useEffect, useState } from 'react'\nimport { CCard, CCardBody, CCardGroup, CCol, CForm, CImage, CLoadingButton, CRow, CContainer, CBadge } from '@coreui/react-pro'\nimport { cilSearch } from '@coreui/icons';\nimport CIcon from '@coreui/icons-react';\nimport { GetApi, PutApi } from '../services/Axios';\nimport { api_server_url } from 'src/config/urls';\nimport { Alert, Alert2 } from '../services/Alerts';\nimport { getCookie, resetCookies, setCookie } from '../services/Cookies';\nimport { AddDevice, AddTags, StartCampaign } from '../services/OneSignalServer';\nimport Swal from 'sweetalert2';\nimport { findOtherUsers, findRole, findSession, findUser } from 'src/services/APIs';\nimport { useNavigate } from 'react-router-dom';\nimport OneSignal from 'react-onesignal';\nimport { isIOS } from 'src/helpers';\nimport { AppLoader } from 'src/components/app/AppLoader';\n\nconst getBadge = (status) => {\n  switch (status) {\n    case 'Joined':\n      return 'success-gradient'\n    case 'Inactive':\n      return 'secondary-gradient'\n    case 'Pending':\n      return 'warning-gradient'\n    case 'Banned':\n      return 'danger-gradient'\n    default:\n      return 'secondary-gradient'\n  }\n}\n\nconst Landing = () => {\n  const navigate = useNavigate();\n\n  const [userReady, setUserReady] = useState(false);\n\n  const [loader, setLoader] = useState(false);\n  const [buttonText, setButtonText] = useState('Join');\n  const [buttonStatus, setButtonStatus] = useState(false);\n\n  let code = ''\n  let phone = '';\n  let session_id = '';\n  const [code_S, setCode_S] = useState('');\n  const [phone_S, setPhone_S] = useState('');\n  const [session_id_S, setSessionId_S] = useState('');\n  const [other_users, setOtherUsers] = useState([]);\n\n  useEffect(() => {\n    resetCookies();\n    if (!getCookie('session_id')) { WelcomeAlert(); }\n  }, []);\n\n  const WelcomeAlert = async () => {\n\n    Swal.fire({\n      title: 'Welcome',\n      text: 'to Family Moments Experience',\n      imageUrl: 'logo-2.png',\n      imageWidth: 80,\n      imageAlt: 'Family Moments Experience',\n      showConfirmButton: true,\n      confirmButtonText: \"Proceed\",\n      confirmButtonColor: '#198754',\n      allowOutsideClick: false,\n    }).then((result) => {\n      if (result.isConfirmed) {\n        EnterCode();\n      }\n    })\n\n    const EnterCode = async () => {\n      const swalQueue = Swal.mixin({\n        confirmButtonText: 'Next',\n        confirmButtonColor: '#198754',\n        allowOutsideClick: false,\n      })\n\n      await swalQueue.fire({\n        title: \"What's your code?\",\n        input: \"text\",\n        inputPlaceholder: 'Enter your code...',\n        currentProgressStep: 0,\n        inputValidator: (value) => {\n          if (!value) {\n            return 'You need to write something!'\n          } else {\n            code = value;\n            setCode_S(value);\n\n            findUser(code) // Step 1  => Get User Info\n              .then(value => {\n                setCookie('code', code, 180);\n\n                findRole(value.RoleId) // Step 2  => Get Role Info\n                  .then(value => {\n                    setCookie('role', value.title, 180);\n\n                    findSession(code) // Step 3  => Get Session Info\n                      .then(value => {\n\n                        session_id = value.id || '';\n                        setSessionId_S(value.id || '');\n\n                        setCookie('is_admin', (session_id === 9000) ? true : false, 180);\n\n                        //===== CASE 1 =====// Session not found\n                        if (session_id === '') {\n                          swalQueue.fire({\n                            title: \"Session not found please try again!\",\n                            currentProgressStep: 1,\n                          }).then((result) => {\n                            if (result.isConfirmed) {\n                              WelcomeAlert();\n                            }\n                          })\n                        }\n\n                        //===== CASE 2 =====// Session Found \n                        else if (session_id) { // (iPhone User)\n\n                          if (isIOS) {\n                            swalQueue.fire({\n                              title: \"What's your phone number?\",\n                              input: \"text\",\n                              inputPlaceholder: '99123456',\n                              currentProgressStep: 1,\n                              inputValidator: (value) => {\n\n                                if (!value) {\n                                  return 'You need to write something!'\n                                }\n                                else {\n                                  phone = '+357' + value;\n                                  setPhone_S('+357' + value);\n                                  AddDevice('+357' + value, code, session_id).then(value => {\n                                    if (value.response !== '') {\n                                      Alert(value.response.message, 'success')\n                                      setUserReady(true);\n                                      console.log(value);\n                                    } else {\n                                      swalQueue.fire({\n                                        title: \"Oops. Something went wrong. Please try again!\",\n                                        currentProgressStep: 1,\n                                      }).then((result) => {\n                                        if (result.isConfirmed) {\n                                          WelcomeAlert();\n                                        }\n                                      })\n                                    }\n                                  }\n                                  );\n                                }\n                              }\n                            })\n                          }\n\n                          else { // (Not iPhone User)\n                            swalQueue.fire({\n                              title: \"Please subscribe to the push notification service before joining the session...\",\n                              currentProgressStep: 1,\n                            }).then((result) => {\n                              if (result.isConfirmed) {\n                                OneSignal.showNativePrompt().then(() => {\n                                  Promise.resolve(OneSignal.isPushNotificationsEnabled()).then((value) => {\n                                    console.log('Checking push notifications status... => ', value)\n                                    if (value) {\n                                      setUserReady(true);\n                                    } else {\n                                      Alert('Push Notifications must be enabled!', 'info')\n                                    }\n                                  })\n                                    .catch(() => {\n                                      Alert('Push Notifications must be enabled!', 'info')\n                                    });\n                                });\n\n                              }\n                            })\n                          }\n\n                        }\n\n                      });\n                  });\n              })\n          }\n        }\n      })\n    }\n  }\n\n  const joinSession = async (e) => { // Retrieve user session\n    e.preventDefault();\n\n    setCookie('session_id', session_id_S, 180);\n    setLoader(true);\n\n    PutApi(api_server_url + '/session/update/' + session_id_S + '/' + code_S, { activated: true }) // Update session status\n      .then(() => {\n        setButtonText('Waiting for others to join...'); // Wait for others to join\n        setButtonStatus(true);\n\n        if (!isIOS) {\n          OneSignal.getUserId(function (userId) {\n            AddTags(userId, session_id_S, code_S).then(() => {\n              openListener(); // Wait for others to join\n            });\n          });\n        }\n\n        if (isIOS) {\n          openListener(); // Wait for others to join\n        }\n      }).catch(error => {\n        alert(error);\n      });\n  }\n\n  function openListener() { // Check if all users are activated and update db\n    let day = new Date();\n    let end_date = day.getTime() + 7 * 24 * 60 * 60 * 1000; // End date time\n    end_date = new Date(end_date);\n\n    const interval = setInterval(() => {\n      findOtherUsers(session_id_S, code_S).then((value) => {\n        setOtherUsers(value);\n\n        GetApi(api_server_url + '/session/count/' + getCookie('session_id'))\n          .then(function (value) {\n            if (value) {\n              if (value.count === 0) { // Check if session has all members joined\n                PutApi(api_server_url + '/sessions/update/' + getCookie('session_id'), { start_date: new Date(day), end_date: end_date, status: 'Active' });\n                setCookie('status', 'Active', 180);\n                setLoader(false);\n\n                Alert2('Session established!', 'success');\n\n                StartCampaign(code_S, phone_S); // Start Notifications campaign\n\n                setLoader(false);\n                navigate('/');\n                clearInterval(interval);\n\n              }\n            }\n          })\n\n      })\n\n    }, 5000);\n  }\n\n  const handleSubmit = (e) => {\n    setLoader(true);\n    joinSession(e);\n  }\n\n  return (\n    <>\n      <div className=\"bg-light min-vh-100 d-flex flex-row align-items-center\">\n        <CContainer>\n          <CRow className=\"justify-content-center\">\n            <CCol md={8} lg={8}>\n              <CCardGroup>\n\n                <CRow style={{ verticalAlign: 'baseline' }} >\n                  <CCard className='landing-card-lg' style={{ writingMode: 'vertical-rl', background: '#a0bcc2' }}>\n                    <CCardBody className=\"text-center\" >\n                      <CImage src='logo.png' style={{ width: '100%', height: '150px', objectFit: 'cover' }} />\n                    </CCardBody>\n                  </CCard>\n                </CRow>\n\n                <CCard className=\"p-6 bg-white text-black\">\n                  <CCardBody>\n                    <CImage rounded={true} src='logo-2.png' className='landing-card' style={{ width: '30%', objectFit: 'cover' }} />\n                    <br className='landing-card' ></br>\n                    <CForm onSubmit={handleSubmit}>\n                      <h4>Welcome to Family Moments Experience</h4>\n                      <br />\n                      {other_users.map((user, index) => {\n                        return (\n                          <div key={index}>\n                            {user.code}: <CBadge\n                              color={getBadge(user.activated ? 'Joined' : 'Pending')}\n                            >{user.activated ? 'Joined' : 'Pending'}</CBadge>\n                          </div>\n                        )\n                      })}\n\n                      <br />\n                      <CRow>\n                        <CCol style={{ display: userReady ? 'none' : 'block' }} >\n                          <AppLoader />\n                        </CCol>\n                        <CCol style={{ textAlign: 'end', margin: '20px 0 0 0', display: userReady ? 'block' : 'none' }}>\n                          <CLoadingButton\n                            color='success'\n                            spinnerType='grow'\n                            loading={loader}\n                            variant='outline'\n                            disabled={buttonStatus}\n                            type='submit'\n                          ><CIcon icon={cilSearch} /> {buttonText}\n                          </CLoadingButton>\n\n                        </CCol>\n                      </CRow>\n                    </CForm>\n                  </CCardBody>\n                </CCard>\n              </CCardGroup>\n            </CCol>\n          </CRow>\n        </CContainer>\n      </div>\n    </>\n  )\n}\n\nexport default Landing\n"],"names":["isIOS","userAgent","navigator","vendor","window","opera","test","MSStream","getMobileOperatingSystem","now","Date","day","getDate","slice","month","getMonth","today","getFullYear","currentTime","getHours","getMinutes","getSeconds","getRandomInt","max","Math","floor","random","addMinutes","numOfMinutes","date","setMinutes","backPresses","isAndroid","toLowerCase","indexOf","handleBackButton","init","maxBackPresses","history","back","pushState","setupWindowHistoryTricks","addEventListener","findSession","code","console","log","GetApi","api_server_url","then","value","session","findUser","user","findRole","RoleId","role","findUserAnswered","session_id","phase","startDate","endDate","type","findOtherUsers","users","findOtherUsersAnswered","SendWebPushByCode","headings","subtitle","campaign","datetime","topic","click_url","body","PostApi","SendSMSByCode","phone","message","AddTags","userId","options","method","headers","Accept","JSON","stringify","app_id","process","external_user_id","tags","fetch","response","json","success","catch","err","error","GetDevices","data","players","AddDevice","StartCampaign","clickUrl","app_url","messageContent","reminderContent","tomorrow","setDate","toLocaleTimeString","hour12","i","toISOString","split","next","phaseA_meritTime","settings","phaseB_meritTime","phaseC_meritTime","cilSearch","getBadge","status","navigate","useNavigate","useState","userReady","setUserReady","loader","setLoader","buttonText","setButtonText","buttonStatus","setButtonStatus","code_S","setCode_S","phone_S","setPhone_S","session_id_S","setSessionId_S","other_users","setOtherUsers","useEffect","resetCookies","getCookie","WelcomeAlert","Swal","title","text","imageUrl","imageWidth","imageAlt","showConfirmButton","confirmButtonText","confirmButtonColor","allowOutsideClick","result","isConfirmed","EnterCode","swalQueue","fire","input","inputPlaceholder","currentProgressStep","inputValidator","setCookie","id","Alert","OneSignal","Promise","resolve","joinSession","e","preventDefault","PutApi","activated","openListener","alert","end_date","getTime","interval","setInterval","count","start_date","Alert2","clearInterval","className","md","lg","style","verticalAlign","writingMode","background","src","width","height","objectFit","rounded","onSubmit","map","index","color","display","AppLoader","textAlign","margin","spinnerType","loading","variant","disabled","icon"],"sourceRoot":""}