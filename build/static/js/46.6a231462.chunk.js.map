{"version":3,"file":"static/js/46.6a231462.chunk.js","mappings":"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","sources":["helpers.js","services/APIs.js","services/Auth.js","../node_modules/@coreui/icons/js/free/cil-arrow-circle-left.js","views/components/Questions.js","../node_modules/@coreui/icons/js/free/cil-bell.js","views/components/HomeCard.js","views/Home.js","services/IdleTimer.js"],"sourcesContent":["const getMobileOperatingSystem = () => {\n  var userAgent = navigator.userAgent || navigator.vendor || window.opera;\n\n  // Windows Phone must come first because its UA also contains \"Android\"\n  if (/windows phone/i.test(userAgent)) {\n    return \"Windows Phone\";\n  }\n\n  if (/android/i.test(userAgent)) {\n    return \"Android\";\n  }\n\n  // iOS detection from: http://stackoverflow.com/a/9039885/177710\n  if (/iPad|iPhone|iPod/.test(userAgent) && !window.MSStream) {\n    return \"iOS\";\n  }\n\n  return \"Desktop\";\n}\n\nlet isIOS = getMobileOperatingSystem() === 'iOS' ? true : false;\n\n\n// Date, time\nlet now = new Date();\nlet day = (\"0\" + now.getDate()).slice(-2);\nlet month = (\"0\" + (now.getMonth() + 1)).slice(-2);\nlet today = now.getFullYear() + \"-\" + (month) + \"-\" + (day);\n\nlet currentTime =\n  (now.getHours() < 10 ? '0' + (now.getHours()) : now.getHours())\n  + ':' +\n  (now.getMinutes() < 10 ? '0' + (now.getMinutes()) : now.getMinutes())\n  + ':' +\n  now.getSeconds();\n\nfunction getRandomInt(max) {\n  max = 9999999;\n  return Math.floor(Math.random() * max);\n}\n\nfunction addMinutes(numOfMinutes, date = new Date()) {\n  date.setMinutes(date.getMinutes() + numOfMinutes);\n\n  return date;\n}\n\nvar backPresses = 0;\nvar isAndroid = navigator.userAgent.toLowerCase().indexOf(\"android\") > -1;\nvar maxBackPresses = 2;\nfunction handleBackButton(init) {\n  if (init !== true)\n    backPresses++;\n  if ((!isAndroid && backPresses >= maxBackPresses) ||\n    (isAndroid && backPresses >= maxBackPresses - 1)) {\n    window.history.back();\n  } else\n    window.history.pushState({}, '');\n}\nfunction setupWindowHistoryTricks() {\n  handleBackButton(true);\n  window.addEventListener('popstate', handleBackButton);\n}\n\nexport { today, currentTime, isIOS, addMinutes, getRandomInt, setupWindowHistoryTricks }\n\n","import { api_server_url } from \"src/config/urls\";\nimport { GetApi } from \"./Axios\";\n\nexport async function findSession(code) { // Retrieve user session\n  console.log('Getting session...');\n\n  const session = await GetApi(api_server_url + '/session/user/' + code)\n    .then(value => value);\n\n  return { ...session };\n}\n\n\nexport async function findUser(code) { // Retrieve user\n  console.log('Getting user...');\n\n  const user = await GetApi(api_server_url + '/user/' + code)\n    .then(value => value);\n\n  return { ...user };\n}\n\nexport async function findRole(RoleId) { // Retrieve user\n  console.log('Getting role...');\n\n  const role = await GetApi(api_server_url + '/role/' + RoleId)\n    .then(value => value);\n\n  return { ...role };\n}\n\nexport async function findUserAnswered(session_id, code, phase, startDate, endDate, type) { // Retrieve other users\n  console.log('Getting user answers...');\n\n  const user = await GetApi(api_server_url + '/questions/user/answered/' + session_id + '/' + code + '/' + phase + '/' + startDate + '/' + endDate + '/' + type)\n    .then(value => value);\n\n  return user;\n}\n\nexport async function findOtherUsers(session_id, code) { // Retrieve other users\n  console.log('Getting other users status...');\n\n  const users = await GetApi(api_server_url + '/session/users/' + session_id + '/' + code)\n    .then(value => value);\n\n  return users;\n}\n\nexport async function findOtherUsersAnswered(session_id, code, phase, startDate, endDate) { // Retrieve other users\n  console.log('Getting other users answered...');\n\n  const users = await GetApi(api_server_url + '/questions/answered/' + session_id + '/' + code + '/' + phase + '/' + startDate + '/' + endDate)\n    .then(value => value);\n\n  return users;\n}\n\n","\nimport { useNavigate } from 'react-router-dom';\nimport { useEffect } from \"react\";\nimport { getCookie } from './Cookies';\n\n\nexport const CheckSession = () => {\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (!getCookie('session_id')) {\n      navigate('/landing');\n    }\n  }, []);\n}\n\nexport const CheckAdmin = () => {\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (getCookie('is_admin') !== 'true') {\n      navigate('/home');\n    }\n  }, []);\n}","export const cilArrowCircleLeft = [\"512 512\",\"<path fill='var(--ci-primary-color, currentColor)' d='M256,16.042c-132.548,0-240,107.451-240,240s107.452,240,240,240,240-107.452,240-240S388.548,16.042,256,16.042ZM403.078,403.12A207.253,207.253,0,1,1,447.667,337,207.364,207.364,0,0,1,403.078,403.12Z' class='ci-primary'/><polygon fill='var(--ci-primary-color, currentColor)' points='272.614 164.987 249.986 142.36 136.305 256.041 249.986 369.722 272.614 347.095 197.56 272.041 385 272.041 385 240.041 197.56 240.041 272.614 164.987' class='ci-primary'/>\"]","import React from 'react'\nimport { AppLoader } from 'src/components/app/AppLoader';\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardFooter,\n  CCardHeader,\n  CCol,\n  CFormCheck,\n} from '@coreui/react-pro'\nimport CIcon from '@coreui/icons-react'\nimport { cilArrowCircleLeft, cilArrowCircleRight } from '@coreui/icons'\n\nconst Questions = (props) => {\n  var title_texts = props.title.split('|').map(function (word, index) {\n    // if (index == 0) {\n    //   return (\n    //     <p style={{ fontSize: 'large', fontWeight: 'bold', display: 'none' }} key={index}>{word}</p>\n    //   );\n    // }\n    if (index == 0) {\n      return (\n        <p style={{ fontSize: 'small', fontWeight: 'bold' }} key={index}>{word}</p>\n      );\n    }\n    if (index == 1) {\n      return (\n        <p style={{ fontSize: 'large', fontStyle: 'italic' }} key={index}>{word}</p>\n      );\n    }\n  });\n\n  return (\n    <>\n      <div className='questions-center'>\n        <div style={props.loader ? { display: 'none' } : { display: 'block' }} className='questions-card' >\n          <CCol md={12}>\n            <CCard md={12}>\n              <CCardHeader>\n                <strong>Question {parseInt(props.index) + 1} ({props.typeOfQuestion} choice)</strong><span className='float-end'><strong>{parseInt(props.index) + 1}/{props.total}</strong></span>\n              </CCardHeader>\n              <CCardBody>\n                <div style={{ fontSize: 'large' }}>{title_texts}</div>\n                {props.options.map((option, index) => {\n                  if (props.typeOfQuestion == 'multiple') {\n                    return (\n                      <div key={index}>\n                        <CButton className='question-card' style={{ cursor: 'initial' }}>\n                          <CFormCheck className='question-checkbox' id={(index + 1).toString()} value={option} key={option} label={option} onChange={props.handleSelect} />\n                        </CButton>\n                      </div>\n                    )\n                  } else {\n                    return (\n                      <div key={index}>\n                        <CButton className='question-card' style={{ cursor: 'initial' }}>\n                          <CFormCheck className='question-checkbox' id={(index + 1).toString()} value={option} key={option} label={option} onChange={props.handleSelect} name=\"flexRadioDefault\" type=\"radio\" />\n                        </CButton>\n                      </div>\n                    )\n                  }\n                })}\n              </CCardBody>\n              <CCardFooter>\n                <CButton\n                  style={{ width: '48%' }}\n                  color='primary'\n                  variant='outline'\n                  disabled={props.previousQuestionFlag}\n                  onClick={props.previousQuestion}\n                >Back <CIcon icon={cilArrowCircleLeft} /></CButton>\n                <CButton\n                  style={{ width: '48%' }}\n                  color='success'\n                  variant='outline'\n                  className='float-end'\n                  onClick={props.submitAnswer}\n                >Next <CIcon icon={cilArrowCircleRight} /></CButton>\n              </CCardFooter>\n            </CCard >\n          </CCol>\n        </div>\n        <div style={props.loader ? { display: 'block' } : { display: 'none' }}  >\n          <AppLoader />\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default Questions\n","export const cilBell = [\"512 512\",\"<path fill='var(--ci-primary-color, currentColor)' d='M450.27,348.569,406.6,267.945V184c0-83.813-68.187-152-152-152s-152,68.187-152,152v83.945L58.928,348.568A24,24,0,0,0,80.031,384h86.935c-.238,2.636-.367,5.3-.367,8a88,88,0,0,0,176,0c0-2.7-.129-5.364-.367-8h86.935a24,24,0,0,0,21.1-35.431ZM310.6,392a56,56,0,1,1-111.419-8H310.018A56.14,56.14,0,0,1,310.6,392ZM93.462,352,134.6,276.055V184a120,120,0,0,1,240,0v92.055L415.736,352Z' class='ci-primary'/>\"]","import React from 'react'\nimport {\n  CBadge,\n  CCard,\n} from '@coreui/react-pro'\nimport { cilBell } from '@coreui/icons';\nimport CIcon from '@coreui/icons-react';\n\nexport const HomeCard = (props) => {\n\n  return (\n    <>\n      <CCard style={{ backgroundColor: 'rgba(0,0,0,0.8)', padding: '30px 18px' }}>\n        <h1 style={{ color: 'white' }}>Thank you for participating in Family Moments Experience!</h1>\n        <hr style={{ height: '4px', background: '#9ef1e2' }} />\n        <p style={{ color: 'white', padding: '0', marginBottom: '0' }}>Pending: <CBadge color='warning-gradient'>Phase {props.pendingPhaseText}</CBadge></p>\n        <hr style={{ height: '4px', background: '#9ef1e2' }} />\n        {/* <p style={{ color: 'white', padding: '0', marginBottom: '0' }}>Previous phase completed:</p>\n        {props.otherUsers.map((user, index) => {\n          return (\n            <div key={index}>\n              <p style={{ color: 'white', padding: '0', marginBottom: '0' }}>\n                <CBadge color={user.answered ? 'success-gradient' : 'danger-gradient'}>\n                  User {user.code} has {user.answered ? 'completed' : 'not completed'} previous phase\n                </CBadge>\n\n\n              </p>\n            </div>\n          )\n        })}\n\n        <hr style={{ height: '4px', background: '#9ef1e2' }} /> */}\n        <p style={{ color: 'white', padding: '0' }}>You will receive a push notification when new questions are available <CIcon icon={cilBell} /></p>\n      </CCard>\n    </>\n  )\n}","import React, { useEffect, useState } from 'react'\nimport { findOtherUsers, findOtherUsersAnswered, findUserAnswered } from 'src/services/APIs';\nimport { getCookie, setCookie } from 'src/services/Cookies';\nimport { GetCurrentDeadline, GetCurrentPhase, GetPendingPhase, GetPendingPhaseTime, GetPreviousPhase, GetSettings, settings } from 'src/config/globals';\nimport { CheckSession } from 'src/services/Auth';\nimport Questions from './components/Questions';\nimport { HomeCard } from './components/HomeCard';\nimport { GetApi, PostApi } from 'src/services/Axios';\nimport { api_server_url } from 'src/config/urls';\nimport { Alert } from 'src/services/Alerts';\nimport { CBadge } from '@coreui/react-pro';\nimport { getRandomInt, setupWindowHistoryTricks } from 'src/helpers';\nimport { IdleTimer } from 'src/services/IdleTimer';\n\nconst Home = () => {\n  CheckSession();\n\n  const [loader, setLoader] = useState(true);\n\n  const [currentPhaseText, setCurrentPhaseText] = useState('N/A');\n  const [currentDeadlineText, setCurrentDeadlineText] = useState('N/A');\n  const [pendingPhaseText, setPendingPhaseText] = useState('N/A');\n\n  const [questionsAvailable, setQuestionsAvailable] = useState(false);\n  const [previousQuestionFlag, setPreviousQuestionFlag] = useState(true);\n  const [editAnswersFlag, setEditAnswersFlag] = useState(false);\n\n  let previousPhase = 'N/A';\n  let currentPhase = 'N/A';\n  let pendingPhase = 'N/A';\n  let pendingPhaseTime = 'N/A';\n\n  const [otherUsers, setOtherUsers] = useState([]);\n  const role = getCookie('role') === 'Child' ? 'child' : 'parent';\n\n  let tmp_questions = [];\n  const [questions, setQuestions] = useState([]);\n\n  const [question_id, setQuestionId] = useState(0);\n\n  const [title, setTitle] = useState('');\n  const [typeOfQuestion, setTypeOfQuestion] = useState('');\n  const [options, setOptions] = useState([]);\n  const [correct_option, setCorrectOption] = useState(0);\n\n  if (!getCookie('index')) { setCookie('index', 0, 1); }\n  const [indexText, setIndexText] = useState((getCookie('index')));\n  let index = getCookie('index');\n\n  const [total, setTotal] = useState(0);\n\n  let type = role;\n\n  let today = new Date().toISOString().slice(0, 10);\n  const tmp = new Date(today);\n  tmp.setDate(tmp.getDate() + 1);\n  let tomorrow = new Date(tmp).toISOString().slice(0, 10);\n\n  useEffect(() => {\n    setupWindowHistoryTricks();\n\n    GetSettings().then(() => {\n      GetPhase();\n      GetOtherUsersResponses();\n    })\n    IdleTimer();\n  }, []);\n\n  const GetPhase = () => {\n    previousPhase = GetPreviousPhase();\n    currentPhase = GetCurrentPhase();\n    pendingPhase = GetPendingPhase();\n    pendingPhaseTime = GetPendingPhaseTime();\n\n    setPendingPhaseText(pendingPhase + ' starts at ' + pendingPhaseTime);\n\n    if (currentPhase !== 'N/A') {\n      Promise.resolve(findUserAnswered(getCookie('session_id'), getCookie('code'), currentPhase, today, tomorrow, role))\n        .then(value => {\n          if (value.count[0].count == value.q_count[0].count) { // User Completed the current Phase\n            console.log(\"Current Phase Completed\");\n            setEditAnswersFlag(true);\n            setQuestionsAvailable(false);\n          } else {\n            console.log(value);\n            setCookie('index', value.count[0].count, 1);\n            setIndexText(getCookie('index'));\n            index = getCookie('index');\n            setEditAnswersFlag(false);\n            GetQuestions();\n          }\n        })\n    }\n    setCurrentPhaseText(currentPhase);\n    setCurrentDeadlineText(GetCurrentDeadline());\n    setQuestionsAvailable(currentPhase !== 'N/A' ? true : false);\n\n  }\n\n  const GetOtherUsersResponses = () => {\n    // Check if other users completed the task\n    let tmpOtherUsers = [];\n\n    Promise.resolve(findOtherUsers(getCookie('session_id'), getCookie('code')))\n      .then(value1 => {\n        tmpOtherUsers = value1 || [];\n        for (let i = 0; i < tmpOtherUsers.length; i++) {\n          tmpOtherUsers[i]['answered'] = false;\n        }\n        Promise.resolve(findOtherUsersAnswered(getCookie('session_id'), getCookie('code'), previousPhase, today, tomorrow))\n          .then(value2 => {\n            value1.map((user, index) => {\n              value2.map((answer) => {\n                if (user.code === answer.code) {\n                  tmpOtherUsers[index]['answered'] = true;\n                }\n              })\n            })\n            setOtherUsers(tmpOtherUsers);\n            setLoader(false);\n          }).catch((e) => {\n            setLoader(false);\n          });\n      }).catch((e) => {\n        setLoader(false);\n      });\n  }\n\n  const GetQuestions = () => {\n    Promise.resolve(\n      GetApi(api_server_url + '/questions/' + type + '/' + currentPhase)\n        .then(function (value) {\n\n          if (value.questions) {\n            if (value.questions.length !== 0) {\n              tmp_questions = value.questions;\n              setQuestions(tmp_questions);\n\n              // Set current Question\n              setQuestionId(tmp_questions[indexText].id);\n              setTitle(tmp_questions[indexText].title);\n              setTypeOfQuestion(tmp_questions[indexText].response);\n              setOptions(tmp_questions[indexText].options);\n              setCorrectOption(tmp_questions[indexText].correct_option);\n              setTotal(value.count);\n            } else {\n              setTitle('No available questions');\n              setTypeOfQuestion('');\n              setIndexText('');\n              setTotal('');\n            }\n          } else {\n            setTitle('No available questions');\n            setTypeOfQuestion('');\n            setIndexText('');\n            setTotal('');\n          }\n          setLoader(false);\n        })\n    )\n  }\n\n  let selected_options = [];\n\n  const handleSelect = (e) => {\n    if (e.target.checked && typeOfQuestion == 'multiple') {\n      selected_options.push(e.target.id);\n    } else if (e.target.checked && typeOfQuestion == 'single') {\n      selected_options = [];\n      selected_options.push(e.target.id);\n    } else {\n      const result = selected_options.filter(element => element !== e.target.id);\n      selected_options = result;\n    }\n  }\n\n  function editAnswers() {\n    setQuestionsAvailable(true);\n\n    GetPhase();\n    if (currentPhase !== 'N/A') {\n      GetQuestions();\n    }\n  }\n\n  function previousQuestion() {\n    index = getCookie('index');\n    index--;\n    setCookie('index', index, 1);\n\n\n    if (index >= 0) {\n      setIndexText(index);\n      setTitle(questions[index].title);\n      setTypeOfQuestion(questions[index].response);\n      setOptions(questions[index].options);\n      setCorrectOption(questions[index].correct_option);\n      setQuestionId(questions[index].id);\n    }\n    if (index === 0) {\n      setPreviousQuestionFlag(true);\n    }\n  }\n\n  function submitAnswer() {\n    setPreviousQuestionFlag(false);\n\n    console.log(selected_options);\n\n    if (selected_options.length === 0) {\n      Alert(\"You must submit an answer!\", 'warning');\n    } else {\n      PostApi(api_server_url + '/answer/create', { id: getRandomInt(), selected: selected_options, UserCode: getCookie('code'), QuestionId: question_id });\n\n      index = getCookie('index');\n      index++;\n      setCookie('index', index, 1);\n\n      if (correct_option == 1) { // yes/no question\n        if (selected_options == '2' && role == 'parent') { // No => skip questions where true\n          index = getCookie('index');\n          index = total;\n          setCookie('index', index, 1);\n        }\n\n        if (selected_options == '2' && role == 'child') { // No => skip questions where true\n          index = getCookie('index');\n          index++;\n          setCookie('index', index, 1);\n          let tmp_correct_option = questions[index].correct_option;\n\n          while (tmp_correct_option == \"true\") {\n            index = getCookie('index');\n            index++;\n            setCookie('index', index, 1);\n            tmp_correct_option = questions[index].correct_option;\n          }\n        }\n      }\n\n      if (index < total) {\n        setIndexText(index);\n        setTitle(questions[index].title);\n        setTypeOfQuestion(questions[index].response);\n        setOptions(questions[index].options);\n        setCorrectOption(questions[index].correct_option);\n        setQuestionId(questions[index].id);\n      }\n      else {\n        Alert('Completed!', 'success');\n        setQuestionsAvailable(false);\n        setPreviousQuestionFlag(true);\n        setEditAnswersFlag(true);\n\n        setCookie('index', 0, 1);\n\n        setTitle('');\n        setTypeOfQuestion('');\n        setOptions([]);\n        setCorrectOption(0);\n        setIndexText(0);\n        setTotal(0);\n      }\n    }\n  }\n\n  return (\n    <>\n      {/* <div style={{ width: '100%', display: (editAnswersFlag) ? 'block' : 'none' }}>\n        <CButton variant={'outline'} className={'float-end'} onClick={editAnswers}>Edit answers <CIcon icon={cilPencil} /></CButton>\n      </div> */}\n\n      <div style={{ display: loader ? 'none' : 'block' }}>\n\n        <div style={{ width: '100%', display: (currentPhaseText === 'N/A') ? 'none' : 'block' }}>\n          <CBadge color='success-gradient'>Phase {currentPhaseText} is running</CBadge> <CBadge color='danger-gradient'>Deadline at {currentDeadlineText}</CBadge>\n          <hr />\n        </div>\n\n\n\n        <div style={{ display: (questionsAvailable) ? 'block' : 'none' }}>\n          <Questions options={options} loader={loader} index={indexText} id={question_id} title={title} typeOfQuestion={typeOfQuestion} total={total} handleSelect={handleSelect} previousQuestion={previousQuestion} previousQuestionFlag={previousQuestionFlag} submitAnswer={submitAnswer} />\n        </div>\n\n        <div className='home-card' style={{ display: (!questionsAvailable) ? 'block' : 'none' }}>\n          <HomeCard otherUsers={otherUsers} pendingPhaseText={pendingPhaseText} />\n        </div >\n\n      </div>\n    </>\n  )\n}\n\nexport default Home","export function IdleTimer() {\n\n  let inactivityTime = function () {\n    let time;\n    window.onload = resetTimer;\n    document.onmousemove = resetTimer;\n    document.onkeypress = resetTimer;\n    document.onkeyup = resetTimer;\n    document.onkeydown = resetTimer;\n    document.onclick = resetTimer;\n\n    function logout() {\n      window.location.reload();\n    }\n\n    function resetTimer() {\n      console.log(\"Idle timer started...\");\n      clearTimeout(time);\n      time = setTimeout(logout, 60000)\n    }\n  };\n  inactivityTime();\n}"],"names":["isIOS","userAgent","navigator","vendor","window","opera","test","MSStream","getMobileOperatingSystem","now","Date","day","getDate","slice","month","getMonth","today","getFullYear","currentTime","getHours","getMinutes","getSeconds","getRandomInt","max","Math","floor","random","addMinutes","numOfMinutes","date","setMinutes","backPresses","isAndroid","toLowerCase","indexOf","handleBackButton","init","maxBackPresses","history","back","pushState","setupWindowHistoryTricks","addEventListener","findSession","code","console","log","GetApi","api_server_url","then","value","session","findUser","user","findRole","RoleId","role","findUserAnswered","session_id","phase","startDate","endDate","type","findOtherUsers","users","findOtherUsersAnswered","CheckSession","navigate","useNavigate","useEffect","getCookie","CheckAdmin","cilArrowCircleLeft","props","title_texts","title","split","map","word","index","style","fontSize","fontWeight","fontStyle","className","loader","display","md","parseInt","typeOfQuestion","total","options","option","cursor","id","toString","label","onChange","handleSelect","name","width","color","variant","disabled","previousQuestionFlag","onClick","previousQuestion","icon","submitAnswer","cilArrowCircleRight","AppLoader","cilBell","HomeCard","backgroundColor","padding","height","background","marginBottom","pendingPhaseText","useState","setLoader","currentPhaseText","setCurrentPhaseText","currentDeadlineText","setCurrentDeadlineText","setPendingPhaseText","questionsAvailable","setQuestionsAvailable","setPreviousQuestionFlag","setEditAnswersFlag","previousPhase","currentPhase","pendingPhase","pendingPhaseTime","otherUsers","setOtherUsers","tmp_questions","questions","setQuestions","question_id","setQuestionId","setTitle","setTypeOfQuestion","setOptions","correct_option","setCorrectOption","setCookie","indexText","setIndexText","setTotal","toISOString","tmp","setDate","tomorrow","GetSettings","GetPhase","GetOtherUsersResponses","time","logout","location","reload","resetTimer","clearTimeout","setTimeout","onload","document","onmousemove","onkeypress","onkeyup","onkeydown","onclick","inactivityTime","GetPreviousPhase","GetCurrentPhase","GetPendingPhase","GetPendingPhaseTime","Promise","resolve","count","q_count","GetQuestions","GetCurrentDeadline","tmpOtherUsers","value1","i","length","value2","answer","catch","e","response","selected_options","target","checked","push","result","filter","element","Alert","PostApi","selected","UserCode","QuestionId","tmp_correct_option"],"sourceRoot":""}