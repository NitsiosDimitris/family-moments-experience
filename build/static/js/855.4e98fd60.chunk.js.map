{"version":3,"file":"static/js/855.4e98fd60.chunk.js","mappings":"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","sources":["routes.js","components/app/AppContent.js","components/app/AppFooter.js","components/app/header/AppHeaderInfo.js","components/app/AppHeader.js","components/app/AppSidebarNav.js","_nav.js","components/app/AppSidebar.js","layout/DefaultLayout.js"],"sourcesContent":["import React from 'react'\n\nconst Landing = React.lazy(() => import('./views/Landing'))\nconst Home = React.lazy(() => import('./views/Home'))\n\nconst Admin = React.lazy(() => import('./views/Admin'))\n\nconst routes = [\n  { path: '/', exact: true, name: 'Home' },\n  { path: '/landing', name: 'Landing', element: Landing },\n  { path: '/home', name: 'Home', element: Home },\n\n  { path: '/admin', name: 'Admin', element: Admin },\n\n]\n\nexport default routes\n","import React, { Suspense } from 'react'\nimport { Navigate, Route, Routes } from 'react-router-dom'\nimport { CContainer } from '@coreui/react-pro'\n\n// routes config\nimport routes from '../../routes'\nimport { AppLoader } from './AppLoader'\n\nconst AppContent = () => {\n  return (\n    <CContainer lg>\n      <Suspense fallback={<AppLoader />}>\n        <Routes>\n          {routes.map((route, idx) => {\n            return (\n              route.element && (\n                <Route\n                  key={idx}\n                  path={route.path}\n                  exact={route.exact}\n                  name={route.name}\n                  element={<route.element />}\n                />\n              )\n            )\n          })}\n          <Route path=\"/\" element={<Navigate to=\"home\" replace />} />\n        </Routes>\n      </Suspense>\n    </CContainer>\n  )\n}\n\nexport default React.memo(AppContent)\n","import React from 'react'\nimport { CButton, CFooter } from '@coreui/react-pro'\nimport { useNavigate } from 'react-router-dom';\nimport { getCookie } from 'src/services/Cookies'\nimport CIcon from '@coreui/icons-react'\nimport { cilLockLocked } from '@coreui/icons'\n\nconst AppFooter = () => {\n  const navigate = useNavigate();\n  return (\n    <CFooter>\n      <div className='ms-1' style={{ display: getCookie('is_admin') === 'true' ? 'block' : 'none' }}>\n        <CButton variant='outline'\n          onClick={() => {\n            navigate('/admin')\n          }}>\n          <CIcon icon={cilLockLocked} size={'lg'} ></CIcon><strong>Administrator Settings</strong>\n        </CButton>\n      </div>\n      <div>\n        <a href=\"https://silversky3d.com\" target=\"_blank\" rel=\"noopener noreferrer\">\n          SS3D\n        </a>\n        <span className=\"ms-1\">&copy; 2022 silversky3DLabs.</span>\n      </div>\n\n    </CFooter>\n  )\n}\n\nexport default React.memo(AppFooter)\n","import React from 'react'\nimport PropTypes from \"prop-types\";\nimport CIcon from '@coreui/icons-react';\nimport { cisCircle } from '@coreui/icons-pro';\nimport { CCol } from '@coreui/react-pro';\n\nconst GetStatus = session_status => {\n  switch (session_status) {\n    case 'Active':\n      return '#2eb85c'\n    case 'Pending':\n      return '#f9b115'\n    case 'Inactive':\n      return '#e55353'\n    default:\n      return '#39f';\n  }\n}\n\nexport const AppHeaderInfo = ({ session_id, user_code, user_role, session_status }) => {\n  return (\n    <>\n      <CCol className='header-info-col'>\n        <p className='header-title'>Session ID: <strong>{session_id}</strong> | User Code: <strong>{user_code}</strong> | Role: <strong>{user_role}</strong> | Status: <CIcon icon={cisCircle} style={{ color: GetStatus(session_status), border: '3px solid #babcbc', borderRadius: '50px' }} /></p>\n      </CCol>\n    </>\n  )\n}\n\n// AppHeaderInfo.propTypes = {\n//   session_id: PropTypes.string.isRequired,\n//   user_code: PropTypes.string.isRequired,\n//   session_status: PropTypes.string\n// };\n","import React from 'react'\nimport {\n  CButton,\n  CCol,\n  CContainer,\n  CHeader,\n  CHeaderDivider,\n  CImage\n} from '@coreui/react-pro'\nimport { useNavigate } from 'react-router-dom';\nimport { AppHeaderInfo } from './header/AppHeaderInfo';\nimport { getCookie } from 'src/services/Cookies';\n\nconst AppHeader = () => {\n  const navigate = useNavigate();\n\n  return (\n    <>\n      <CHeader className=\"mb-4\">\n        <CContainer fluid>\n          <CCol xs={3}>\n            <CImage src='logo.png' height={80}\n              onClick={() => {\n                navigate('/');\n              }} />\n          </CCol>\n\n          <CCol xs={7} style={{ textAlign: 'end' }}>\n            <div style={{ textAlign: 'end', padding: '0px' }}>\n              <CButton color='success' variant='outline'\n                onClick={() => {\n                  navigate('/landing');\n                  // window.location.assign('/#/landing')\n                }}\n              >Join new session</CButton>\n            </div>\n          </CCol>\n        </CContainer>\n        <CHeaderDivider /><AppHeaderInfo session_id={getCookie('session_id')} user_code={getCookie('code')} user_role={getCookie('role')} session_status={getCookie('status')} /><CHeaderDivider />\n      </CHeader>\n\n    </>\n  )\n}\n\nexport default AppHeader\n","import React from 'react'\nimport { NavLink, useLocation } from 'react-router-dom'\nimport PropTypes from 'prop-types'\n\nimport { CBadge } from '@coreui/react-pro'\n\nexport const AppSidebarNav = ({ items }) => {\n  const location = useLocation()\n  const navLink = (name, icon, badge) => {\n    return (\n      <>\n        {icon && icon}\n        {name && name}\n        {badge && (\n          <CBadge color={badge.color} className=\"ms-auto\">\n            {badge.text}\n          </CBadge>\n        )}\n      </>\n    )\n  }\n\n  const navItem = (item, index) => {\n    const { component, name, badge, icon, ...rest } = item\n    const Component = component\n    return (\n      <Component\n        {...(rest.to &&\n          !rest.items && {\n            component: NavLink,\n          })}\n        key={index}\n        {...rest}\n      >\n        {navLink(name, icon, badge)}\n      </Component>\n    )\n  }\n  const navGroup = (item, index) => {\n    const { component, name, icon, to, ...rest } = item\n    const Component = component\n    return (\n      <Component\n        idx={String(index)}\n        key={index}\n        toggler={navLink(name, icon)}\n        visible={location.pathname.startsWith(to)}\n        {...rest}\n      >\n        {item.items?.map((item, index) =>\n          item.items ? navGroup(item, index) : navItem(item, index),\n        )}\n      </Component>\n    )\n  }\n\n  return (\n    <React.Fragment>\n      {items &&\n        items.map((item, index) => (item.items ? navGroup(item, index) : navItem(item, index)))}\n    </React.Fragment>\n  )\n}\n\nAppSidebarNav.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.any).isRequired,\n}\n","import React from 'react'\nimport CIcon from '@coreui/icons-react'\nimport {\n  cilArrowCircleRight,\n  cilHome,\n  cilList,\n  cilLockLocked,\n} from '@coreui/icons'\nimport { CNavItem, CNavTitle } from '@coreui/react-pro'\n\nconst _nav = [\n  {\n    component: CNavTitle,\n    name: 'Application',\n  },\n  {\n    component: CNavItem,\n    name: 'Home',\n    to: '/home',\n    icon: <CIcon icon={cilHome} customClassName=\"nav-icon\" />,\n  },\n  {\n    component: CNavItem,\n    name: 'Landing',\n    to: '/landing',\n    icon: <CIcon icon={cilArrowCircleRight} customClassName=\"nav-icon\" />,\n  },\n  {\n    component: CNavItem,\n    name: 'Questions',\n    to: '/questions',\n    icon: <CIcon icon={cilList} customClassName=\"nav-icon\" />,\n  },\n  {\n    component: CNavTitle,\n    name: 'Admin',\n  },\n  {\n    component: CNavItem,\n    name: 'Admin',\n    to: '/admin',\n    icon: <CIcon icon={cilLockLocked} customClassName=\"nav-icon\" />,\n  },\n]\n\n\n\nexport default _nav\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { CSidebar, CSidebarNav, CSidebarToggler } from '@coreui/react-pro'\nimport { AppSidebarNav } from './AppSidebarNav'\n\nimport SimpleBar from 'simplebar-react'\nimport 'simplebar/dist/simplebar.min.css'\n\n// sidebar nav config\nimport navigation from '../../_nav'\n\nconst AppSidebar = () => {\n  const dispatch = useDispatch()\n  const unfoldable = useSelector((state) => state.sidebarUnfoldable)\n  const sidebarShow = useSelector((state) => state.sidebarShow)\n\n  return (\n    <CSidebar\n      position=\"fixed\"\n      unfoldable={unfoldable}\n      visible={sidebarShow}\n      onVisibleChange={(visible) => {\n        dispatch({ type: 'set', sidebarShow: visible })\n      }}\n    >\n\n      <CSidebarNav>\n        <SimpleBar>\n          <AppSidebarNav items={navigation} />\n        </SimpleBar>\n      </CSidebarNav>\n      <CSidebarToggler\n        className=\"d-none d-lg-flex\"\n        onClick={() => dispatch({ type: 'set', sidebarUnfoldable: !unfoldable })}\n      />\n    </CSidebar>\n  )\n}\n\nexport default React.memo(AppSidebar)\n","import React from 'react'\nimport { AppContent, AppSidebar, AppFooter, AppHeader } from '../components/index'\n\nconst DefaultLayout = () => {\n  return (\n    <>\n      {/* <AppSidebar /> */}\n      <div className=\"wrapper d-flex flex-column min-vh-100 bg-light dark:bg-transparent\">\n        <AppHeader />\n        <div className=\"body flex-grow-1 px-3\">\n          <AppContent />\n        </div>\n        <AppFooter />\n      </div>\n    </>\n  )\n}\n\nexport default DefaultLayout\n"],"names":["path","exact","name","element","React","AppContent","lg","Suspense","fallback","AppLoader","routes","route","idx","to","replace","AppFooter","navigate","useNavigate","className","style","display","getCookie","variant","onClick","icon","cilLockLocked","size","href","target","rel","GetStatus","session_status","AppHeaderInfo","session_id","user_code","user_role","cisCircle","color","border","borderRadius","fluid","xs","src","height","textAlign","padding","AppSidebarNav","items","location","useLocation","navLink","badge","text","navItem","item","index","component","rest","Component","NavLink","key","navGroup","String","toggler","visible","pathname","startsWith","map","CNavTitle","CNavItem","cilHome","customClassName","cilArrowCircleRight","cilList","AppSidebar","dispatch","useDispatch","unfoldable","useSelector","state","sidebarUnfoldable","sidebarShow","position","onVisibleChange","type","navigation"],"sourceRoot":""}